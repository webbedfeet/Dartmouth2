scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+
labs(x='', y='')
for(i in 1:length(d2.1)){
plt <- plt+geom_polygon(data=d2.1[[i]], fill='grey50', alpha=0.5)
}
return(plt)
}
plot.clusters(data.frame(x=a, y=b), k1$cluster)
ggplot(data.frame(x=a, y=b), aes(x,y))+geom_point(size=5, colour='blue')+
scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+labs(x='',y='')
ggplot(data.frame(x=x,y=y), aes(x,y))+geom_point(size=5, colour='blue')+
scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+labs(x='',y='')
getwd()
ggplot(data.frame(x=a, y=b), aes(x,y))+geom_point(size=5, colour='blue')+
scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+labs(x='',y='')
ggsave('ARAASTAT/uniformrandom.pdf')
ggplot(data.frame(x=x,y=y), aes(x,y))+geom_point(size=5, colour='blue')+
scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+labs(x='',y='')
ggsave('ARAASTAT/uniformgrid.pdf')
plot.clusters(data.frame(x=a,y=b), k1$cluster)
ggsave('ARAASTAT/uniformrandomClusters.pdf')
plot.clusters(data.frame(x=x,y=y), k2$cluster)
ggsave('ARAASTAT/uniformgridClusters.pdf')
library(mclust)
data(iris)
dat <- iris[,3:4]
head(dat)
plot(dat)
h <- hclust(dist(dat), 'average')
names(h)
h$height
plot(h)
plot(h, text=F)
?plot.hclust
plot(h, labels=NULL)
plot(h, labels=F)
abline(h=1.5)
abline(h=1)
plot(h, labels=F, ann=F, frame=T)
plot(h, labels=F, ann=F, frame=F)
names(h)
hts  <- sort(h$height)
length(hts)
?cutree
cutree(h, h=hts[145])
?gif
?png
getwd()
system('mkdir -p ARAASTAT/clustTalk/images')
dat <- iris[,3:4]
h <- hclust(dist(dat), 'average')
hts  <- sort(h$height)
for(i in 130:149){
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus)
pdf(file=paste('anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
dat <- iris[,3:4]
h <- hclust(dist(dat), 'average')
hts  <- sort(h$height)
for(i in 130:149){
print(i)
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus)
pdf(file=paste('ARAASTAT/images/anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
for(i in 130:149){
print(i)
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus)
pdf(file=paste('ARAASTAT/clustTalk/images/anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
plot.clusters <- function(d, clus, sz=5, alpha=0.5){
require(ggplot2)
require(plyr)
names(d) <- c('x','y')
d2 <- split(d, clus)
d2.1 <- llply(d2, function(x) x[chull(x),])
theme_set(theme_bw())
plt <- ggplot(d, aes(x,y))+geom_point(size=sz, colour='blue') +
scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)+
labs(x='', y='')
for(i in 1:length(d2.1)){
plt <- plt+geom_polygon(data=d2.1[[i]], fill='grey50', alpha=alpha)
}
return(plt)
}
for(i in 130:149){
print(i)
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus, sz=2, alpha=0.8)
pdf(file=paste('ARAASTAT/clustTalk/images/anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
for(i in 110:149){
print(i)
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus, sz=2, alpha=0.8)
pdf(file=paste('ARAASTAT/clustTalk/images/anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
for(i in 100:149){
print(i)
clus <- cutree(h, h=hts[i])
plt <- plot.clusters(dat,clus, sz=2, alpha=0.8)
pdf(file=paste('ARAASTAT/clustTalk/images/anim',i,'.pdf',sep=''),width=4, height=4)
print(plt)
dev.off()
}
h1=hclust(dist(dat),'single')
h2 = hclust(dist(dat), 'average')
h3 = hclust(dist(dat),'complete')
plot.clusters(h1, cutree(h1,3))
plot.clusters(dat, cutree(h1,3))
plot.clusters(dat, cutree(h2,3))
plot.clusters(dat, cutree(h3,3))
plot.clusters(dat, cutree(h1,3))
plot.clusters(dat, cutree(h2,3))
plot.clusters(dat, cutree(h1,3))
plot.clusters(dat, cutree(h3,3))
x = c(rnorm(20, mean = 0), rnorm(20, mean = 3), rnorm(20, mean = 5))
y = c(rnorm(20, mean = 0), rnorm(20, mean = 5), rnorm(20, mean = 0))
data2 = cbind(x, y)
plot(data2)
h1=hclust(dist(data2),'single')
h2 = hclust(dist(data2), 'average')
h3 = hclust(dist(data2),'complete')
plot.clusters(data2, cutree(h1,3))
data2
plot.clusters(as.data.frame(data2), cutree(h1,3))
plot.clusters(as.data.frame(data2), cutree(h2,3))
plot.clusters(as.data.frame(data2), cutree(h3,3))
h1=hclust(dist(dat),'single')
h2 = hclust(dist(dat), 'average')
h3 = hclust(dist(dat),'complete')
plot.clusters(as.data.frame(data2), cutree(h1,3))
plot.clusters(as.data.frame(dat), cutree(h1,3))
plot.clusters(as.data.frame(dat), cutree(h2,3))
plot.clusters(as.data.frame(dat), cutree(h3,3))
plot.clusters(dat, cutree(h1,3))
ggsave('ARAASTAT/clustTalk/images/single.pdf')
plot.clusters(dat, cutree(h2,3))
ggsave('ARAASTAT/clustTalk/images/average.pdf')
plot.clusters(dat, cutree(h3,3))
ggsave('ARAASTAT/clustTalk/images/complete.pdf')
plot.clusters(dat, cutree(h3,3))
hts
plot(h, ann=F, labels=F)
abline(h=1.1, col='red', lty=2)
plot(h, ann=F, labels=F)
abline(h=1.3, col='red', lty=2)
plot(h, ann=F, labels=F)
abline(h=1, col='red', lty=2)
plot(h, ann=F, labels=F)
abline(h=0.9, col='red', lty=2)
plot.clusters(dat, cutree(h, h=1.3))
plot.clusters(dat, cutree(h, h=0.9))
k1 = kmeans(dat, k=3)
k1 = kmeans(dat, 3)
k1 = kmeans(dat, 1)
?kmeans
k1 = kmeans(dat, 3, iter.max=1)
k2 = kmeans(dat,3, iter.max=2)
k3 = kmeans(dat, 3, iter.max=3)
plot.clusters(dat, k3$cluster)
plot.clusters(dat, k1$cluster)
?mclust
library(mclust)
?Mclust
m = Mclust(dat)
plot(m)
plot(m)
plot(m)
pdf('test.pdf')
plot(m)
dev.off()
?pdf
pdf('test.pdf',bg='white')
plot(m)
pdf('test.pdf',bg='white')
dev.off()
dev.off()
pdf('test.pdf',bg='white')
plot(m)
dev.off()
m2 = Mclust(data2)
plot(m2)
dev.off()
dev.off()
dev.off()
plot(m2)
plot(data2)
ggplot(data2, aes(x,y))+geom_point(size=2,colour='blue')+labs(x='',y='')+scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)
ggplot(as.data.frame(data2), aes(x,y))+geom_point(size=2,colour='blue')+labs(x='',y='')+scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)
ggplot(as.data.frame(data2), aes(x,y))+geom_point(size=5,colour='blue')+labs(x='',y='')+scale_x_continuous(breaks=NULL)+scale_y_continuous(breaks=NULL)
m2
names(m2)
m2$classification
m2$uncertainty
m2$parameters$pro
m2$z
contour(data2[,1],data2[,2], m2$z[,1])
m2$parameters$variance
m2
m2$classification
plot.clusters(data2, m2$classification)
data2
plot.clusters(data2, m2$classification)
plot.clusters(data2, cutree(h,3))
plot.clusters(dat, m$classification)
dim(data2)
length(m2$classification)
plot.clusters(data2, m2$classification)
plot.clusters(as.data.frame(data2), m2$classification)
plot.clusters(dat, m$classification)
plot.clusters(dat, cutree(h,3))
plot.clusters(dat, k3$cluster)
k = kmeans(iris[,-5],3)
?geom_parallel
iris[,-5]
matplot(1:150, iris[,-5], type='l')
matplot(1:4, t(iris[,-5]), type='l')
matplot(1:4, t(iris[,-5]), type='l', col=k$cluster)
matplot(1:4, t(iris[,-5]), type='l', col=k$cluster, axes=F, xlim=c(0,5), ylab='', xlab='')
box()
matplot(1:4, t(iris[,-5]), type='l', col=k$cluster, axes=F, xlim=c(0.5,4.5), ylab='', xlab='')
box()
axis(2)
?axis
axis(1, at=1:4, labels=names(iris)[1:4])
princomp(iris[,-5])
pr=princomp(iris[,-5])
names(pr)
pr$loadings
pr$scores
plot(pr$scores[,1:2])
ggplot(pr$scores, aes('Comp.1','Comp.2'))+geom_point(size=4, colour='blue')
ggplot(as.data.frame(pr$scores), aes('Comp.1','Comp.2'))+geom_point(size=4, colour='blue')
names(as.data.frame(pr$scores))
dat = as.data.frame(pr$scores)
head(dat)
ggplot(dat, aes('Comp.1','Comp.2'))+geom_point(size=4, colour='blue')
ggplot(dat, aes('Comp.1','Comp.2'))+geom_point()
ggplot(dat, aes(x='Comp.1',y='Comp.2'))+geom_point()
head(dat)
qplot('Comp.1','Comp.2',data=dat)
plot(dat$Comp.1, dat$Comp.2)
plot(dat$Comp.1, dat$Comp.2, axes=F)
plot(dat$Comp.1, dat$Comp.2, axes=F,xlab='',ylab='',pch=21)
plot(dat$Comp.1, dat$Comp.2, axes=F,xlab='',ylab='',pch=21, col='blue')
box()
title(xlab='Principal Component 1', ylab='Principal Component 2')
library(pwr)
library(ggplot2, quietly=T)
p1 <- seq(0.6, 0.9,by=0.01)
p2 <- 0.32
pwr <- rep(0, length(p1))
for(i in 1:length(p1)){
for(i in 1:length(p1)){
pwr[i] <- pwr.2p.test(h=ES.h(p1[i],p2), n=30)$power}
qplot(p1, pwr, xlab='Power')+geom_hline(yintercept=c(.8,.9),colour='red',linetype=2)
qplot(p1, pwr, xlab='Alternate p', ylab='Power')+geom_hline(yintercept=c(.8,.9),colour='red',linetype=2)
qplot(p1, pwr, xlab='Alternate p', ylab='Power')+geom_hline(yintercept=c(.8,.9),colour='red',linetype=2)+opts(title="N1=N2=30")
for(i in 1:length(p1)){
pwr[i] <- pwr.2p2n.test(h=ES.h(p1[i],p2), n1=40, n2=20)$power}
qplot(p1, pwr, xlab='Alternate p', ylab='Power')+geom_hline(yintercept=c(.8,.9),colour='red',linetype=2)+opts(title="N1=40,N2=20")
for(i in 1:length(p1)){
pwr[i] <- pwr.2p2n.test(h=ES.h(p1[i],p2), n1=20, n2=40)$power}
qplot(p1, pwr, xlab='Alternate p', ylab='Power')+geom_hline(yintercept=c(.8,.9),colour='red',linetype=2)+opts(title="N1=40,N2=20")
library(devtools)
install_github('ramnathv','slidify')
install_github('slidify','ramnathv')
library(slidify)
getwd()
author('Dartmouth1')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("~/Dartmouth Symposium/Dartmouth1")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
getwd()
getwd()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
library(devtools)
install_github('slidifyLibraries','ramnathv')
library(slidify)
getwd()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
?slidify
slidify('index.Rmd','index.html')
p <- rbinom(500,1,0.3)
x = p*rnorm(500)+(1-p)*rnorm(500,2,1)
hist(x)
x = p*rnorm(500)+(1-p)*rnorm(500,5,1)
hist(x)
density(x)
densityplot(x)
library(lattice)
densityplot(x)
library(ggplot2)
p = qplot(x, geom='density')
p
p = qplot(x, geom='density')+theme_bw()
p
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.5,x,2.5),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))
print(p)
dd
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.5,x,2.5),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y))
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.5,x,2.5),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)), name='')+
theme_bw()
print(p)
?theme
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)), name='')+
theme(axis.text=theme_blank(), axis.title=theme_blank())
theme_bw()
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)), name='')+
theme(axis.text=theme_blank(), axis.title=theme_blank())+
theme_bw()
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))+
labs(x='',y='')+
theme(axis.text=theme_blank(), axis.title=theme_blank())
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))+
labs(x='',y='')+
theme_bw()+
theme(axis.text=theme_blank(), axis.title=theme_blank())
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))+
labs(x='',y='')+
theme_bw()+
theme(axis.text=theme_blank(), axis.title=theme_blank(), axis.ticks=theme_blank())
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))+
labs(x='',y='')+
theme_bw()+
theme(axis.text=element_blank(), axis.title=element_blank(), axis.ticks=element_blank())
print(p)
library(ggplot2)
P <- rbinom(400, 1,0.3)
Z  <- P*rnorm(400)+(1-P)*rnorm(400,5,1)
dd <- with(density(Z), data.frame(x,y))
p <- ggplot(dd, aes(x=x,y=y))+
geom_line(color='black')+
layer(data=dd, mapping=aes(x=ifelse(x<2.2,x,2.2),y=y), geom='area',
geom_params=list(fill='red',alpha=0.5))+
layer(data=dd, mapping=aes(x=ifelse(x>2.2,x, 2.2), y=y), geom='area',
geom_params=list(fill='blue',alpha=0.5))+
scale_y_continuous(limits = c(0,max(dd$y)))+
labs(x='',y='')+
theme_bw()+
theme(axis.text=element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), panel.grid=element_blank())
print(p)
slidify('index.Rmd')
getwd()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd('..')
author('Dartmouth2')
setwd('../Dartmouth1')
dir('..')
dir('..',pattern='jpg'
)
:setwd('../Dartmouth2')
setwd('../Dartmouth2')
